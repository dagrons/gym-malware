"""fetch bytez from downloader."""

import csv
import os
import sys
import tempfile
import filebrowser
from typing import List


class Fetcher:
    """fetch bytez from downloader."""

    def __init__(self, indexes: List[str] = [], downloader: filebrowser.FileBrowserClient = None):
        self.sha256_to_fpath = {}
        self.md5_to_fpath = {}
        self.sha256_list = []
        self.downloader = downloader
        self.cache = {}
        for fpath in indexes:
            with open(fpath, 'r') as f:
                csv_reader = csv.DictReader(
                    f, fieldnames=['filename', 'sha256', 'md5'])
                for line in csv_reader:
                    if line['filename'] == 'filename':
                        continue
                    self.sha256_to_fpath[line['sha256']] = line['filename']
                    self.sha256_list.append(line['sha256'])
                    self.md5_to_fpath[line['md5']] = line['filename']

    def fetch(self, hash: str, save_path: str = None) -> bytes:
        if hash in self.cache and os.path.exists(self.cache[hash]):
            return open(self.cache[hash], 'rb').read()
        if save_path is None:
            _, save_path = tempfile.mkstemp()
        if len(hash) == 32:
            filename = self.md5_to_fpath[hash]
        elif len(hash) == 64:
            filename = self.sha256_to_fpath[hash]
        else:
            raise ValueError
        self.downloader.download_auth_file(filename, save_path)
        self.cache[hash] = save_path
        return open(save_path, 'rb').read()
