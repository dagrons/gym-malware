"""
从filebrowser中获取对应的样本
"""

import os
import sys
import filebrowser
from numpy import zeros_like
from gym_malware.envs.utils import malconv
from gym_malware.envs.utils.fetcher import Fetcher
from gym_malware.envs.utils.malconv import MalConv
from gym_malware.envs.utils.pefeatures import get_feature_extractor
from sklearn.externals import joblib
import zerorpc


mc_client = zerorpc.Client()
mc_client.connect("tcp://127.0.0.1:4242")

use_mc = True

module_path = os.path.dirname(os.path.abspath(sys.modules[__name__].__file__))
fetcher: Fetcher = None  # lazy init

local_model = joblib.load(os.path.join(module_path, 'gradient_boosting.pkl'))
local_model_threshold = 0.90


def get_fetcher():
    global fetcher
    if fetcher == None:
        fetcher = Fetcher(indexes=[os.path.join(module_path, "all.malware.csv")],
                          downloader=filebrowser.FileBrowserClient(
            hosts=[filebrowser.HostInfo("10.112.255.77", "8081", "admin", "daxiahyh")]))
    return fetcher


def fetch_file(sha256):
    return get_fetcher().fetch(sha256)


def get_available_sha256():
    return get_fetcher().sha256_list


def get_score_local(bytez):
    if use_mc:
        return mc_client.get_score_malconv(bytez)
    return local_model.predict_proba(
        get_feature_extractor().extract(bytez).reshape((1, -1)))[0, -1]


def get_label_local(bytez):
    if use_mc:
        score, label = mc_client.get_label_malconv(bytez)
    else:
        score = get_score_local(bytez)
        label = float(get_score_local(bytez) >= local_model_threshold)
    print("score={} (hidden), label={}".format(score, label))
    return label
